{"version":3,"sources":["styling/Global.js","utils/axiosWithAuth.js","components/AddRestForm.js","components/EditRestForm.js","components/RestaurantList.js","components/Header.js","pages/Home.js","pages/Login.js","pages/Signup.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","axiosWithAuth","token","localStorage","getItem","axios","create","headers","Authorization","AddRestForm","props","initialFormState","city","name","state","streetAddress","streetName","type","zipCode","useState","rest","setRest","handleInputChange","event","target","value","setType","useEffect","get","then","res","data","catch","err","console","log","response","Fmain","onSubmit","preventDefault","addRest","onChange","map","Fbutton","styled","form","button","EditRestForm","currentRest","updateRest","id","onClick","setEditing","className","Container","div","Container2","Users","p","Blist","RestaurantList","rests","length","key","editRest","deleteRest","Nbutton","Title","h1","Header","user","to","Home","currentUser","JSON","parse","window","address","setRests","setNewRest","editing","setCurrentRest","username","updatedrest","patch","Hheader","post","newrest","delete","filter","h2","FormikLogin","withFormik","mapPropsToValues","password","validationSchema","Yup","shape","required","handleSubmit","values","setStatus","setItem","stringify","history","push","e","errors","touched","status","users","setUsers","Main","Form2","Text","Input","placeholder","Buttonc","Button","Form","label","Field","FormikSignup","min","max","newUser","setNewUser","PrivateRoute","Component","component","render","App","exact","path","Login","Signup","Global","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9175884.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    b, u, i, center,\n    dl, dt, dd, ol, ul, li,\n    fieldset, form, label, legend,\n    table, caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed, \n    figure, figcaption, footer, header, hgroup, \n    menu, nav, output, ruby, section, summary,\n    time, mark, audio, video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        font: inherit;\n        vertical-align: baseline;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        font-family: 'Cereal';\n    }\n    /* HTML5 display-role reset for older browsers */\n    article, aside, details, figcaption, figure, \n    footer, header, hgroup, menu, nav, section {\n        display: block;\n    }\n    body {\n        line-height: 1;\n        font-family: 'Roboto Mono', monospace;\n    }\n    ol, ul {\n        list-style: none;\n    }\n    blockquote, q {\n        quotes: none;\n    }\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n        content: '';\n        content: none;\n    }\n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n `\n\n export default GlobalStyle;","  import axios from 'axios';\n\n      const axiosWithAuth = () => {\n      const token = localStorage.getItem('token')\n    \n      return axios.create({\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      })\n    }\n\n    export default axiosWithAuth","import React, { useState, useEffect } from \"react\";\nimport axiosWithAuth from '../utils/axiosWithAuth'\nimport styled from 'styled-components'\n\nconst AddRestForm = props => {\n   \n    const initialFormState = { \n      city: '',\n      name: '',\n      state: '',\n      streetAddress: '',\n      streetName: '',\n      type: '',\n      zipCode: '',\n    };\n\n  const [rest, setRest] = useState(initialFormState);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setRest({ ...rest, [name]: value });\n  };\n\nconst [type, setType] = useState([]);\n\n  const getType = () => {\n    axiosWithAuth()\n      .get(\n        `https://business-rec-web-be.herokuapp.com/api/companies/companytypes`,\n        {\n          headers: {\n            Authorization: `${localStorage.getItem(\"token\")}`\n          }\n        }\n      )\n      .then(res => {\n        setType(res.data)\n      })\n      .catch(err => console.log(err.response));\n  };\n\n  useEffect(() => {\n    getType();\n  }, []);\n\n  return (\n    <Fmain\n      onSubmit={event => {\n        event.preventDefault();\n        props.addRest(rest);\n        setRest(initialFormState);\n        console.log(rest)\n      }}\n    >\n      <label>City</label>\n      <input\n        type=\"text\"\n        name=\"city\"\n        value={rest.city}\n        onChange={handleInputChange}\n      />\n      <label>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={rest.name}\n        onChange={handleInputChange}\n      />\n     \n     <label>State</label>\n     <input\n        type=\"text\"\n        name=\"state\"\n        value={rest.state}\n        onChange={handleInputChange}\n      />\n\n     <label>streetAddress</label>\n     <input\n        type=\"text\"\n        name=\"streetAddress\"\n        value={rest.streetAddress}\n        onChange={handleInputChange}\n      />\n\n      <label>User Review</label>\n     <input\n        type=\"text\"\n        name=\"streetName\"\n        value={rest.streetName}\n        onChange={handleInputChange}\n      />\n\n      <label>type</label>\n      <select\n        type=\"dropddown\"\n        name=\"type\"\n        value={rest.type}\n        onChange={handleInputChange}\n      >\n      {type.map(type => (\n        <option value={type.type}>{type.type}</option>\n      ))}\n      </select>\n\n      <label>zipCode</label>\n      <input\n        type=\"text\"\n        name=\"zipCode\"\n        value={rest.zipCode}\n        onChange={handleInputChange}\n      />\n      \n      <Fbutton>Add a business</Fbutton>\n    </Fmain>\n  );\n};\n\nexport default AddRestForm;\n\nconst Fmain = styled.form`\nheight: 10vh;\ndisplay: flex;\nalign-items: center;\njustify-content: space-around;\n\n`\nconst Fbutton = styled.button`\nbackground-color: #DC143C;\ncolor: #fff;\ntext-align: center;\npadding: 0.5%;\nmargin-right: 2%;\n\n`","import React, { useState, useEffect } from \"react\";\nimport axiosWithAuth from '../utils/axiosWithAuth';\n\n\nconst EditRestForm = props => {\n\n  const [rest, setRest] = useState(props.currentRest);\n\n  useEffect(\n    () => {\n      setRest(props.currentRest);\n    },\n    [props]\n  );\n\n\n  const [type, setType] = useState([]);\n\n  const getType = () => {\n    axiosWithAuth()\n      .get(\n        `https://business-rec-web-be.herokuapp.com/api/companies/companytypes`,\n        {\n          headers: {\n            Authorization: `${localStorage.getItem(\"token\")}`\n          }\n        }\n      )\n      .then(res => {\n        setType(res.data)\n      })\n      .catch(err => console.log(err.response));\n  };\n\n  useEffect(() => {\n    getType();\n  }, []);\n\n\n\n\n\n\n\n\n\n\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setRest({ ...rest, [name]: value });\n  };\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault();\n        props.updateRest(rest.id, rest);\n      }}\n    >\n      <label>City</label>\n      <input\n        type=\"text\"\n        name=\"city\"\n        value={rest.city}\n        onChange={handleInputChange}\n      />\n      <label>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={rest.name}\n        onChange={handleInputChange}\n      />\n     \n     <label>State</label>\n     <input\n        type=\"text\"\n        name=\"state\"\n        value={rest.state}\n        onChange={handleInputChange}\n      />\n\n     <label>streetAddress</label>\n     <input\n        type=\"text\"\n        name=\"streetAddress\"\n        value={rest.streetAddress}\n        onChange={handleInputChange}\n      />\n\n      <label>streetName</label>\n     <input\n        type=\"text\"\n        name=\"streetName\"\n        value={rest.streetName}\n        onChange={handleInputChange}\n      />\n\n      <label>type</label>\n      <select\n        type=\"dropddown\"\n        name=\"type\"\n        value={rest.type}\n        onChange={handleInputChange}\n      >\n      {type.map(type => (\n        <option value={type.type}>{type.type}</option>\n      ))}\n      </select>\n\n\n\n\n\n      <label>zipCode</label>\n      <input\n        type=\"text\"\n        name=\"zipCode\"\n        value={rest.zipCode}\n        onChange={handleInputChange}\n      />\n\n      <button>Update</button>\n      <button\n        onClick={() => props.setEditing(false)}\n        className=\"button muted-button\"\n      >\n        Cancel\n      </button>\n    </form>\n  );\n};\n\nexport default EditRestForm;\n","import React from 'react'\nimport styled from 'styled-components'\n\nfunction RestaurantList(props) {\n\n    return (\n        <Container>\n            <Container2>\n                {props.rests.length > 0 ? (\n                    props.rests.map(rest => (\n                        <Blist key={rest.id}>\n                                <p>{rest.city}</p>\n                                <p>{rest.name}</p>\n                                <p>{rest.state}</p>\n                                <p>{rest.streetName}</p>\n                                <p>{rest.streetAddress}</p>\n                                <p>{rest.type}</p>\n                                <p>{rest.zipCode}</p>\n                        <div>\n                            <button\n                            className=\"button muted-button\"\n                            onClick={() => props.editRest(rest)}\n                        >\n                            Edit\n                        </button>\n                        <button\n                            className=\"button muted-button\"\n                            onClick={() => props.deleteRest(rest.id)}\n\n                        >\n                            Delete\n                        </button>\n                        </div>\n                    </Blist>\n                        ))\n                    ) : (\n                        <div>\n                            <Users>No users</Users>\n                        </div>\n                    )}\n            </Container2>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n`\nconst Container2 = styled.div`\n   display: flex;\n   flex-wrap: wrap;\n   align-items: center;\n   justify-content: space-around;\n`\n\n\nconst Users = styled.p`\ntext-align: center;\n\n`\nconst Blist = styled.div`\nwidth: 25%;\npadding: 2%;\nmargin: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nborder: 1px solid black;\n\n\n`\n\nexport default RestaurantList","import React from \"react\";\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nfunction Header(props) {\n    return (\n        <Container>\n            <Title>BUSINESS-REC</Title>\n            <p>@{props.user}</p>\n            <Link to=\"/\">\n                <Nbutton>Logout</Nbutton>\n            </Link>\n        </Container>\n    )\n}\n\nconst Nbutton = styled.button`\nbackground-color: #fff;\ncolor: black;\ntext-align: center;\npadding: 20%;\nmargin-right: 2%;\n`\nconst Title = styled.h1`\nfont-size: 30px;\n`\n\nconst Container = styled.div`\n    background-color: #DC143C;\n    color: white;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2.5%;\n    `\n\nexport default Header;","import React, { useState, useEffect } from \"react\";\nimport AddRestForm from \"../components/AddRestForm\";\nimport EditRestForm from \"../components/EditRestForm\";\nimport RestaurantList from '../components/RestaurantList'\nimport Header from '../components/Header'\nimport axiosWithAuth from '../utils/axiosWithAuth'\nimport styled from 'styled-components'\n\nconst Home = () => {\n\n  const currentUser = JSON.parse(window.localStorage.getItem('user'));\n  const [user, setUser]= useState(currentUser)\n\n  const initialFormState = { \n    id: null, \n    name: \"\", \n    type: \"\",\n    address: \"\",\n    city: \"\"\n  };\n\n  const [rests, setRests] = useState({});\n\n// DISPLAY BUSINESSES\n  const getRest = () => {\n    axiosWithAuth()\n      .get(\n        `https://business-rec-web-be.herokuapp.com/api/users/${user.id}/companies`,\n        {\n          headers: {\n            Authorization: `${localStorage.getItem(\"token\")}`\n          }\n        }\n      )\n      .then(res => {\n        setRests(res.data)\n      })\n      .catch(err => console.log(err.response));\n  };\n\n  useEffect(() => {\n    getRest();\n  }, []);\n\n  const [newRest, setNewRest] = useState(initialFormState);\n\n  // ADD A BUSINESS\n  const addRest = rest => {\n    axiosWithAuth()\n    .post(`https://business-rec-web-be.herokuapp.com/api/users/${user.id}/newcompany`,\n    rest)\n    .then(res => {\n      const newrest = res.data\n      setRests([...rests, newrest])\n    })\n    .catch(err => console.log(err.response));\n  }; \n\n// DELETE A BUSINESS\n  const deleteRest = id => {\n    axiosWithAuth()\n      .delete(\n        `https://business-rec-web-be.herokuapp.com/api/users/${\n          user.id\n        }/companies`,\n        { data: { id: `${id}` } }\n      )\n      .then(res => {\n        console.log(res);\n        const id = res.data.id;\n        setNewRest(rests.filter(rest => rest.id !== id));\n      });\n  };\n\n\n  const [editing, setEditing] = useState(false);  \n  const [currentRest, setCurrentRest] = useState(initialFormState);\n\n\n  const editRest = rest => {\n    setEditing(true);\n    setCurrentRest({ \n        city: rest.city,\n        name: rest.name, \n        state: rest.state,\n        streetName: rest.streetName,\n        streetAddress: rest.streetAddress,\n        type: rest.type,\n        zipCode: rest.zipCode\n\n    });\n  };\n\n  /* const updateRest = (id, updateRest) => {\n    setEditing(false);\n    setRests(rests.map(rest => (rest.id === id ? updateRest : rest)));\n  };\n */\n\nconst updateRest = (id, updatedrest) => {\n  axiosWithAuth()\n    .patch(\n      `https://business-rec-web-be.herokuapp.com/api/users/${\n        user.id\n      }/companies`,\n      {data: updatedrest}\n    )\n    .then(res => {\n      setEditing(false);\n      setRests(rests.map(rest => (rest.id === id ? updateRest : rest))); \n    });\n};\n\n\n  return (\n    <div>\n      <div>\n        <Header user={user.username} />\n        <div>\n          {editing ? (\n            <div>\n              <h2>Edit Business</h2>\n              <EditRestForm\n                editing={editing}\n                setEditing={setEditing}\n                currentRest={currentRest}\n                updateRest={updateRest}\n              />\n            </div>\n          ) : (\n            <div>\n              <Hheader>Add a Business</Hheader>\n              <AddRestForm  addRest={addRest}/>\n            </div>\n          )}\n        </div>\n        <div>\n          <Hheader>My Businesses</Hheader>\n          <RestaurantList rests={rests} deleteRest={deleteRest} editRest={editRest} />\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n\nconst Hheader = styled.h2`\ntext-align: center;\npadding: 1%;\n\n\n\n`","import React, {useState, useEffect} from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport styled from 'styled-components'\n\nconst Login=({errors, touched, status}) => {\n    const [users,setUsers] = useState([]);\n    useEffect(() => {\n        if (status){\n            setUsers([...users, status]);\n        }\n    },[status]);\n\n    return(\n\n    <Main>\n      <Form2>\n        <Title>Log In</Title>\n        <Text>\n          <Input type=\"text\" name=\"username\" placeholder=\"username\"/>\n            {touched.username && errors.username && (\n                <p>{errors.username}</p>\n                  )}\n          <Input type=\"password\" name=\"password\" placeholder=\"password\"/>\n            {touched.password && errors.password && (\n                <p>{errors.password}</p>\n                  )}\n        </Text>\n        <Buttonc>\n          <Button className = \"buttonclass\">Sign In</Button>\n        </Buttonc>\n      </Form2>\n    </Main>\n    );\n};\nconst FormikLogin = withFormik({\n    mapPropsToValues({username,password}){\n        return {\n            username: username || \"\",\n            password: password || \"\"\n        };\n    },\n    validationSchema: Yup.object().shape({\n        username: Yup.string().required(\"Username must be entered\"),\n        password: Yup.string().required(\"Password must be entered\")    \n    }),\n    \n    handleSubmit(values, { props, setStatus }){\n    axios\n    .post(\"https://business-rec-web-be.herokuapp.com/api/auth/login\", values)\n    .then(event => {\n        localStorage.setItem(\"token\", event.data.token);\n        localStorage.setItem(\"user\", JSON.stringify(event.data.user));\n        setStatus(event.data);\n        props.history.push('/home')\n    })\n    .catch(err => console.log(err.e));\n\n}\n\n})(Login);\nconsole.log(FormikLogin)\nexport default FormikLogin;\n\n//styling\n\nconst Main = styled.div`\nheight: 100vh;\nbackground-color: #fff;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\ntext-align: center;\n`\nconst Form2 = styled(Form)`\nborder: 1px solid black;\nbackground-color: #fff;\npadding: 20px;\n`\nconst Title = styled.label`\ntext-align: center;\nmargin: 10%;\n`\nconst Text = styled.div`\ndisplay: flex;\nflex-direction: column;\npadding: 60px;\n`\nconst Input = styled(Field)`\nwidth: 100%;\nmargin-top: 5%;\nmargin-bottom: 5%;\n`\nconst Buttonc = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n&: hover .buttonclass{\n  background-color: #fff;\n  color: #DC143C;\n  }\n`\n\nconst Button = styled.button`\nbackground-color: #DC143C;\ncolor: #fff;\nwidth: 50%;\ntext-align: center;\npadding: 5%;\n`\n","import React, {useState, useEffect} from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport styled from 'styled-components'\n\nconst Signup=({errors, touched, status}) => {\n    const [newUser,setNewUser] = useState([]);\n    useEffect(() => {\n        if (status){\n            setNewUser([...newUser, status]);\n        }\n    },[status]);\n\n    return(\n\n    <Main>\n      <Form2>\n        <Title>Sign Up</Title>\n        <Text>\n          <Input type= \"text\" name=\"username\" placeholder=\"username\"/>\n            {touched.username && errors.username && (\n              <p>{errors.username}</p>\n                  )}\n          <Input type=\"password\" name=\"password\" placeholder=\"password\"/>\n            {touched.password && errors.password && (\n              <p>{errors.password}</p>\n                  )}\n        </Text>\n        <Buttonc>\n          <Button className = \"buttonclass\">Sign Up</Button>\n        </Buttonc>\n      </Form2>\n     </Main>\n    );\n\n    \n};\nconst FormikSignup = withFormik({\n    mapPropsToValues({username,password}){\n        return {\n            username: username || \"\",\n            password: password || \"\"\n        };\n    },\n    validationSchema: Yup.object().shape({\n        username: Yup.string()\n        .required(\"You must create a username before continuing\")\n        .min(4, \"must be 4 or more characters\")\n        .max(15, 'thats a bit long, make it less than 15 characters'),\n        password: Yup.string()\n        .required(\"Password must be entered\")       \n        .min(4, \"must be 4 or more characters\")\n        .max(15, 'thats a bit long, make it less than 15 characters')\n\n    }),    \n    handleSubmit(values,  {props, setStatus }){\n    axios\n    .post(\"https://business-rec-web-be.herokuapp.com/api/auth/register\", values)\n    .then(event => {\n        setStatus(event.data);\n            props.history.push('/')\n    })\n    .catch(err => console.log(err.e));\n\n}\n\n})(Signup);\nconsole.log(FormikSignup)\nexport default FormikSignup\n\n//styles\n\nconst Main = styled.div`\nheight: 100vh;\nbackground-color: #fff;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\ntext-align: center;\n\n`\nconst Form2 = styled(Form)`\nborder: 1px solid black;\nbackground-color: #ffffff;\npadding: 20px;\n`\nconst Title = styled.label`\ntext-align: center;\nmargin: 10%;\n`\nconst Text = styled.div`\ndisplay: flex;\nflex-direction: column;\npadding: 60px;\n`\nconst Input = styled(Field)`\nwidth: 100%;\nmargin-top: 5%;\nmargin-bottom: 5%;\n`\nconst Buttonc = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n&: hover .buttonclass{\nbackground-color: #fff;\ncolor: #DC143C;\n}\n`\nconst Button = styled.button`\nbackground-color: #DC143C;\ncolor: #fff;\nwidth: 50%;\ntext-align: center;\npadding: 5%;\n`\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (localStorage.getItem(\"token\")) {\n          return <Component {...props} {...rest} />;\n        }\n        return <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport GlobalStyle from \"./styling/Global\";\n\nimport { Route } from \"react-router-dom\";\n\nimport Home from './pages/Home'\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nfunction App() {\n\n\n  \n  return (\n    <div>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/signup\" component={Signup} />\n      <PrivateRoute path=\"/home\" component={Home} />\n      <GlobalStyle />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}